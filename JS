const Calculer = document.querySelector('input[type=button]');

Calculer.addEventListener('click', calcIP);
const random = document.querySelector('#a');

random.addEventListener('click', randomize);
var w=0;
function randomize() {
  var form = document.querySelector('form');
  form.ipinput.value= Math.floor(Math.random() * 256)+"."+Math.floor(Math.random() * 256)+"."+Math.floor(Math.random() * 256)+"."+Math.floor(Math.random() * 256);
  var rm= Math.floor(Math.random() * 33);
  var a=0;
  var b=0;
  var c=0;
  var d=0;
  for(var i=0;i<=7;i++)
    {
      if(rm>0)
        {
          a=a+Math.pow(2,7-i);
          rm=rm-1;
        }
    }
  for(var i=0;i<=7;i++)
    {
      if(rm>0)
        {
          b=b+Math.pow(2,7-i);
          rm=rm-1;
        }
    }
  for(var i=0;i<=7;i++)
    {
      if(rm>0)
        {
          c=c+Math.pow(2,7-i);
          rm=rm-1;
        }
    }
  for(var i=0;i<=7;i++)
    {
      if(rm>0)
        {
          d=d+Math.pow(2,7-i);
          rm=rm-1;
        }
    }
  form.sminput.value=a+"."+b+"."+c+"."+d;
}




function toString(data) {
	var str = (data >> 24 & 0xFF).toString() + "." +
		(data >> 16 & 0xFF).toString() + "." + (data >> 8 & 0xFF).toString() + "." + (data & 0xFF).toString();
	return str;
}

function calcIP() {
	var form = document.querySelector('form');
	// console.log(form.sminput.value);

	var inputip = (form.ipinput.value);
	var inputmask = (form.sminput.value);
  var sinputip = (form.sipinput.value);
  checkInput(inputip);
  checkInput(inputmask);
  if (w==1)
    {
      window.alert("Une adresse n'est pas valide !");
      w=0;
      
    }
  else
    {
	var ip = inputip.split('.');
  var sip = sinputip.split('.');

	var masque = inputmask.split('.');
	var mask = parseInt(masque[0]) << 24 | parseInt(masque[1]) << 16 | parseInt(masque[2]) << 8 | parseInt(masque[3]);

	var CIDR = 0;
	var m = mask;
	for (var i = 0; i < 32; i++) {
		if ((m & 0x01) == 0x00) CIDR++;
		else break;
		m= m >> 1;
	}
	//  console.log(ip, mask.toString(16), masque,  CIDR);
	var IP = parseInt(ip[0]) << 24 | parseInt(ip[1]) << 16 | parseInt(ip[2]) << 8 | parseInt(ip[3]);
  var sIP = parseInt(sip[0]) << 24 | parseInt(sip[1]) << 16 | parseInt(sip[2]) << 8 | parseInt(sip[3]);


	form.subsizebits.value = 32-CIDR + " Bits";
	form.hostsizebits.value = CIDR + " Bits";

	// network address
	var adrN = IP & mask;
	form.subnetaddress.value = toString(adrN);
  var sadrN = sIP & mask;
  if (toString(adrN)==toString(sadrN))
    {
      form.yesorno.value = "Oui";
    }
  else
    {
      form.yesorno.value = "Non"
    }

	// first address
	var adrFirst = adrN + 1;
	form.starthost.value = toString(adrFirst);

	// boroadcast address
	var adrDiff = adrN | ~mask;
	form.broadcastaddress.value = toString(adrDiff);

	// last address
	var adrLast = adrDiff - 1;
	form.endhost.value  = toString(adrLast);

	// hosts number
	var nb = Math.pow(2, CIDR) - 2;
	form.numofhosts.value = nb;

}
}


function checkInput(data) {
  if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(data))
      {
      }
  else
  {
        w=1;
  }
}
